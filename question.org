* Plan

** Answer

at -> return item at coordinates (coordinates should be t, for tests array of size = 2 will be ok)
insert -> insert item at coordinates, replace if exists
add -> insert item at coordinates if place is not occupied
update -> replace item at coordinates, do nothing otherwise
erase -> you know the drill




| cl-containers | cl-data-structures |
| find-item     | at                 |
| insert-item   | insert             |
|               | add                |
|               | update             |
| empty!        | erase              |

** cl containers direct methods

find-item
empty!
empty-p
insert-item
make-node-for-container
size
(setf size)

** cl-data-structures api

at
(setf at)

add
add!

insert

erase
erase!

size

update
update!

become-functional

become-mutable
